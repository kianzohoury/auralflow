# Model design.
model:
  # Your model's name.
  name: my_model
  # The base model architecture.
  base-model: unet
  # The max depth of the network.
  max-layers: 6
  # The number of features to start with.
  init-features: 16
  bottleneck:
    # The type of bottleneck for the network.
    type: conv
    # The number of layers within the bottleneck.
    num-layers: 1
  encoder:
    # The scheme for a single encoder sub-block.
    # Format:
    #   convolutions:
    #     * conv_k{kernel_size}_s{stride_size}. Optionally,
    #       conv_k{kernel_size}_same preserves the spatial dimension sizes.
    #   downsampling:
    #     * maxpool_{kernel_size}
    #     * downscale (halves spatial dimensions)
    #   activations:
    #     * sigmoid
    #     * relu
    #     * leaky_relu_{leak constant}
    #     * tanh
    #     * glu
    #   relu:
    #     relu_{leak constant}
    #
    # If
    scheme: ['conv_k5_s2', 'batch_norm', 'leaky_relu_0.2']
    # How many sub-blocks to stack for an encoder block.
    num-layers: 1
  decoder:
    # The scheme for a single decoder sub-block.
    scheme: ['t_conv_k5_s2', 'batch_norm', 'dropout_0.5', 'relu']
    # How many sub-blocks to stack for a decoder block.
    num-layers: 1
  # The number of layers using dropout (starting from the first decoder block).
  num-dropouts: 3
  # Whether to use skip connections or not.
  skip-connections: True
  # The final mask activation function.
  mask-activation: sigmoid
  # Whether to use input normalization.
  input-norm: False
  # Whether to use output normalization.
  output-norm: False
